# ============================================================
# rootfs/etc/services.d/todoist-voice-ha/run - Service runner

#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start the Todoist Voice HA service
# ==============================================================================

# Wait for Home Assistant to be available
bashio::log.info "Waiting for Home Assistant to be ready..."
bashio::net.wait_for 80 homeassistant

# Set environment variables from add-on options
export TODOIST_API_TOKEN="$(bashio::config 'todoist_token')"
export LOG_LEVEL="$(bashio::config 'log_level')"
export RATE_LIMIT_REQUESTS="$(bashio::config 'rate_limit_requests')"
export RATE_LIMIT_WINDOW="$(bashio::config 'rate_limit_window')"
export CORS_ORIGINS="$(bashio::config 'cors_origins' | jq -r 'join(",")')"
export DEFAULT_PROJECT_NAME="$(bashio::config 'default_project_name')"
export AUTO_CREATE_PROJECTS="$(bashio::config 'auto_create_projects')"
export REQUIRE_DATE_CONFIRMATION="$(bashio::config 'require_date_confirmation')"
export CONVERSATION_TIMEOUT="$(bashio::config 'conversation_timeout')"
export PROJECT_CACHE_TIMEOUT="$(bashio::config 'project_cache_timeout')"
export HOME_ASSISTANT_URL="http://supervisor/core"
export SUPERVISOR_TOKEN="${SUPERVISOR_TOKEN}"

# Validate required configuration
if ! bashio::config.has_value 'todoist_token'; then
    bashio::log.fatal "Todoist API token is required but not configured!"
    bashio::exit.nok
fi

# Log startup information
bashio::log.info "Starting Todoist Voice HA service..."
bashio::log.info "Log level: ${LOG_LEVEL}"
bashio::log.info "Default project: ${DEFAULT_PROJECT_NAME}"
bashio::log.info "Auto-create projects: ${AUTO_CREATE_PROJECTS}"

# Change to app directory
cd /app || bashio::exit.nok

# Start the Node.js application
exec node src/server.js