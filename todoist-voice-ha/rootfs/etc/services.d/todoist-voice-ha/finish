# ============================================================
# rootfs/etc/services.d/todoist-voice-ha/finish - Service cleanup

#!/usr/bin/with-contenv bashio
# ==============================================================================
# Todoist Voice HA cleanup
# ==============================================================================

bashio::log.info "Todoist Voice HA service stopped"

# ============================================================
# Installation and Setup Guide

## Quick Start Guide

### Step 1: Install the Add-on

1. Add the repository to your Home Assistant add-on store:
   ```
   https://github.com/your-username/todoist-voice-ha
   ```

2. Install the "Todoist Voice HA" add-on

3. Configure the add-on:
   - **Todoist API Token**: Get from https://todoist.com/app/settings/integrations
   - **Log Level**: Set to "info" for normal operation
   - **Default Project**: Choose your preferred default project
   - **Auto-create Projects**: Enable for automatic project creation

4. Start the add-on and check the logs

### Step 2: Install the Custom Integration

1. Copy the integration files to:
   ```
   config/custom_components/todoist_voice_ha_integration/
   ```

2. Restart Home Assistant

3. Go to Settings > Devices & Services > Add Integration

4. Search for "Todoist Voice HA Integration"

5. Configure with your add-on URL (usually `http://a0d7b954-todoist-voice-ha:8080`)

### Step 3: Configure Voice Assistant

1. Add the provided automations to your `automations.yaml`

2. Configure your voice assistant (Google Home, Alexa, etc.) to trigger the conversation intents

3. Test with voice commands like:
   - "Hey Google, add buy milk to my shopping list"
   - "Alexa, create finish project report in work project"

### Step 4: Set Up Dashboard

1. Add the provided Lovelace configuration to your dashboard

2. Access the "Todoist Voice HA Assistant" card to monitor and control the system

3. Use the manual buttons for testing and maintenance

## Advanced Configuration

### Custom Automations

Create custom automations for specific use cases:

```yaml
- alias: "Todoist Voice - Shopping List Handler"
  trigger:
    - platform: conversation
      command: "Add {item} to shopping"
  action:
    - service: todoist_voice_ha_integration.create_task
      data:
        text: "{{ trigger.slots.item }}"
        project_name: "Shopping List"
        labels: ["shopping", "voice"]
```

### Integration with Other Services

Connect with other Home Assistant integrations:

```yaml
- alias: "Todoist Voice - Calendar Integration"
  trigger:
    - platform: state
      entity_id: sensor.todoist_voice_conversation_analysis
      attribute: selected_project
      to: "Calendar Tasks"
  action:
    - service: calendar.create_event
      data:
        entity_id: calendar.main
        summary: "{{ states('input_text.todoist_voice_input_buffer') }}"